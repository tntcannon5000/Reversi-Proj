#BlueJ class context
comment0.target=src.src.StretchIcon
comment0.text=\r\n\ An\ <CODE>Icon</CODE>\ that\ scales\ its\ image\ to\ fill\ the\ component\ area,\r\n\ excluding\ any\ border\ or\ insets,\ optionally\ maintaining\ the\ image's\ aspect\r\n\ ratio\ by\ padding\ and\ centering\ the\ scaled\ image\ horizontally\ or\ vertically.\r\n\ <P>\r\n\ The\ class\ is\ a\ drop-in\ replacement\ for\ <CODE>ImageIcon</CODE>,\ except\ that\r\n\ the\ no-argument\ constructor\ is\ not\ supported.\r\n\ <P>\r\n\ As\ the\ size\ of\ the\ Icon\ is\ determined\ by\ the\ size\ of\ the\ component\ in\ which\r\n\ it\ is\ displayed,\ <CODE>src.src.StretchIcon</CODE>\ must\ only\ be\ used\ in\ conjunction\r\n\ with\ a\ component\ and\ layout\ that\ does\ not\ depend\ on\ the\ size\ of\ the\r\n\ component's\ Icon.\r\n\ \r\n\ @version\ 1.0\ 03/27/12\r\n\ @author\ Darryl\r\n
comment1.params=imageData
comment1.target=src.src.StretchIcon(byte[])
comment1.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ an\ array\ of\ bytes.\r\n\r\n\ @param\ \ imageData\ an\ array\ of\ pixels\ in\ an\ image\ format\ supported\ by\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ the\ AWT\ Toolkit,\ such\ as\ GIF,\ JPEG,\ or\ (as\ of\ 1.3)\ PNG\r\n\r\n\ @see\ ImageIcon\#ImageIcon(byte[])\r\n
comment10.params=filename\ proportionate
comment10.target=src.src.StretchIcon(java.lang.String,\ boolean)
comment10.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ specified\ file\ with\ the\ specified\ behavior.\r\n\ \r\n\ @param\ filename\ a\ String\ specifying\ a\ filename\ or\ path\r\n\ @param\ proportionate\ <code>true</code>\ to\ retain\ the\ image's\ aspect\ ratio,\r\n\ \ \ \ \ \ \ \ <code>false</code>\ to\ allow\ distortion\ of\ the\ image\ to\ fill\ the\r\n\ \ \ \ \ \ \ \ component.\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.lang.String)\r\n
comment11.params=filename\ description
comment11.target=src.src.StretchIcon(java.lang.String,\ java.lang.String)
comment11.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ specified\ file.\r\n\r\n\ @param\ filename\ a\ String\ specifying\ a\ filename\ or\ path\r\n\ @param\ \ description\ a\ brief\ textual\ description\ of\ the\ image\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.lang.String,\ java.lang.String)\r\n
comment12.params=filename\ description\ proportionate
comment12.target=src.src.StretchIcon(java.lang.String,\ java.lang.String,\ boolean)
comment12.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ specified\ file\ with\ the\ specified\ behavior.\r\n\ \r\n\ @param\ filename\ a\ String\ specifying\ a\ filename\ or\ path\r\n\ @param\ \ description\ a\ brief\ textual\ description\ of\ the\ image\r\n\ @param\ proportionate\ <code>true</code>\ to\ retain\ the\ image's\ aspect\ ratio,\r\n\ \ \ \ \ \ \ \ <code>false</code>\ to\ allow\ distortion\ of\ the\ image\ to\ fill\ the\r\n\ \ \ \ \ \ \ \ component.\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.awt.Image,\ java.lang.String)\r\n
comment13.params=location
comment13.target=src.src.StretchIcon(java.net.URL)
comment13.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ specified\ URL.\r\n\r\n\ @param\ location\ the\ URL\ for\ the\ image\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.net.URL)\r\n
comment14.params=location\ proportionate
comment14.target=src.src.StretchIcon(java.net.URL,\ boolean)
comment14.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ specified\ URL\ with\ the\ specified\ behavior.\r\n\ \r\n\ @param\ location\ the\ URL\ for\ the\ image\r\n\ @param\ proportionate\ <code>true</code>\ to\ retain\ the\ image's\ aspect\ ratio,\r\n\ \ \ \ \ \ \ \ <code>false</code>\ to\ allow\ distortion\ of\ the\ image\ to\ fill\ the\r\n\ \ \ \ \ \ \ \ component.\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.net.URL)\r\n
comment15.params=location\ description
comment15.target=src.src.StretchIcon(java.net.URL,\ java.lang.String)
comment15.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ specified\ URL.\r\n\r\n\ @param\ location\ the\ URL\ for\ the\ image\r\n\ @param\ \ description\ a\ brief\ textual\ description\ of\ the\ image\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.net.URL,\ java.lang.String)\r\n
comment16.params=location\ description\ proportionate
comment16.target=src.src.StretchIcon(java.net.URL,\ java.lang.String,\ boolean)
comment16.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ specified\ URL\ with\ the\ specified\ behavior.\r\n\ \r\n\ @param\ location\ the\ URL\ for\ the\ image\r\n\ @param\ \ description\ a\ brief\ textual\ description\ of\ the\ image\r\n\ @param\ proportionate\ <code>true</code>\ to\ retain\ the\ image's\ aspect\ ratio,\r\n\ \ \ \ \ \ \ \ <code>false</code>\ to\ allow\ distortion\ of\ the\ image\ to\ fill\ the\r\n\ \ \ \ \ \ \ \ component.\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.net.URL,\ java.lang.String)\r\n
comment17.params=c\ g\ x\ y
comment17.target=void\ paintIcon(java.awt.Component,\ java.awt.Graphics,\ int,\ int)
comment17.text=\r\n\ Paints\ the\ icon.\ \ The\ image\ is\ reduced\ or\ magnified\ to\ fit\ the\ component\ to\ which\r\n\ it\ is\ painted.\r\n\ <P>\r\n\ If\ the\ proportion\ has\ not\ been\ specified,\ or\ has\ been\ specified\ as\ <code>true</code>,\r\n\ the\ aspect\ ratio\ of\ the\ image\ will\ be\ preserved\ by\ padding\ and\ centering\ the\ image\r\n\ horizontally\ or\ vertically.\ \ Otherwise\ the\ image\ may\ be\ distorted\ to\ fill\ the\r\n\ component\ it\ is\ painted\ to.\r\n\ <P>\r\n\ If\ this\ icon\ has\ no\ image\ observer,this\ method\ uses\ the\ <code>c</code>\ component\r\n\ as\ the\ observer.\r\n\r\n\ @param\ c\ the\ component\ to\ which\ the\ Icon\ is\ painted.\ \ This\ is\ used\ as\ the\r\n\ \ \ \ \ \ \ \ \ \ observer\ if\ this\ icon\ has\ no\ image\ observer\r\n\ @param\ g\ the\ graphics\ context\r\n\ @param\ x\ not\ used.\r\n\ @param\ y\ not\ used.\r\n\r\n\ @see\ ImageIcon\#paintIcon(java.awt.Component,\ java.awt.Graphics,\ int,\ int)\r\n
comment18.params=
comment18.target=int\ getIconWidth()
comment18.text=\r\n\ Overridden\ to\ return\ 0.\ \ The\ size\ of\ this\ Icon\ is\ determined\ by\r\n\ the\ size\ of\ the\ component.\r\n\ \r\n\ @return\ 0\r\n
comment19.params=
comment19.target=int\ getIconHeight()
comment19.text=\r\n\ Overridden\ to\ return\ 0.\ \ The\ size\ of\ this\ Icon\ is\ determined\ by\r\n\ the\ size\ of\ the\ component.\r\n\r\n\ @return\ 0\r\n
comment2.params=imageData\ proportionate
comment2.target=src.src.StretchIcon(byte[],\ boolean)
comment2.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ an\ array\ of\ bytes\ with\ the\ specified\ behavior.\r\n\r\n\ @param\ \ imageData\ an\ array\ of\ pixels\ in\ an\ image\ format\ supported\ by\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ the\ AWT\ Toolkit,\ such\ as\ GIF,\ JPEG,\ or\ (as\ of\ 1.3)\ PNG\r\n\ @param\ proportionate\ <code>true</code>\ to\ retain\ the\ image's\ aspect\ ratio,\r\n\ \ \ \ \ \ \ \ <code>false</code>\ to\ allow\ distortion\ of\ the\ image\ to\ fill\ the\r\n\ \ \ \ \ \ \ \ component.\r\n\r\n\ @see\ ImageIcon\#ImageIcon(byte[])\r\n
comment3.params=imageData\ description
comment3.target=src.src.StretchIcon(byte[],\ java.lang.String)
comment3.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ an\ array\ of\ bytes.\r\n\r\n\ @param\ \ imageData\ an\ array\ of\ pixels\ in\ an\ image\ format\ supported\ by\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ the\ AWT\ Toolkit,\ such\ as\ GIF,\ JPEG,\ or\ (as\ of\ 1.3)\ PNG\r\n\ @param\ \ description\ a\ brief\ textual\ description\ of\ the\ image\r\n\r\n\ @see\ ImageIcon\#ImageIcon(byte[],\ java.lang.String)\r\n
comment4.params=imageData\ description\ proportionate
comment4.target=src.src.StretchIcon(byte[],\ java.lang.String,\ boolean)
comment4.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ an\ array\ of\ bytes\ with\ the\ specified\ behavior.\r\n\r\n\ @see\ ImageIcon\#ImageIcon(byte[])\r\n\ @param\ \ imageData\ an\ array\ of\ pixels\ in\ an\ image\ format\ supported\ by\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ the\ AWT\ Toolkit,\ such\ as\ GIF,\ JPEG,\ or\ (as\ of\ 1.3)\ PNG\r\n\ @param\ \ description\ a\ brief\ textual\ description\ of\ the\ image\r\n\ @param\ proportionate\ <code>true</code>\ to\ retain\ the\ image's\ aspect\ ratio,\r\n\ \ \ \ \ \ \ \ <code>false</code>\ to\ allow\ distortion\ of\ the\ image\ to\ fill\ the\r\n\ \ \ \ \ \ \ \ component.\r\n\r\n\ @see\ ImageIcon\#ImageIcon(byte[],\ java.lang.String)\r\n
comment5.params=image
comment5.target=src.src.StretchIcon(java.awt.Image)
comment5.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ image.\r\n\r\n\ @param\ image\ the\ image\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.awt.Image)\r\n
comment6.params=image\ proportionate
comment6.target=src.src.StretchIcon(java.awt.Image,\ boolean)
comment6.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ image\ with\ the\ specified\ behavior.\r\n\ \r\n\ @param\ image\ the\ image\r\n\ @param\ proportionate\ <code>true</code>\ to\ retain\ the\ image's\ aspect\ ratio,\r\n\ \ \ \ \ \ \ \ <code>false</code>\ to\ allow\ distortion\ of\ the\ image\ to\ fill\ the\r\n\ \ \ \ \ \ \ \ component.\r\n\ \r\n\ @see\ ImageIcon\#ImageIcon(java.awt.Image)\ \r\n
comment7.params=image\ description
comment7.target=src.src.StretchIcon(java.awt.Image,\ java.lang.String)
comment7.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ image.\r\n\ \r\n\ @param\ image\ the\ image\r\n\ @param\ \ description\ a\ brief\ textual\ description\ of\ the\ image\r\n\ \r\n\ @see\ ImageIcon\#ImageIcon(java.awt.Image,\ java.lang.String)\ \r\n
comment8.params=image\ description\ proportionate
comment8.target=src.src.StretchIcon(java.awt.Image,\ java.lang.String,\ boolean)
comment8.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ image\ with\ the\ specified\ behavior.\r\n\r\n\ @param\ image\ the\ image\r\n\ @param\ \ description\ a\ brief\ textual\ description\ of\ the\ image\r\n\ @param\ proportionate\ <code>true</code>\ to\ retain\ the\ image's\ aspect\ ratio,\r\n\ \ \ \ \ \ \ \ <code>false</code>\ to\ allow\ distortion\ of\ the\ image\ to\ fill\ the\r\n\ \ \ \ \ \ \ \ component.\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.awt.Image,\ java.lang.String)\r\n
comment9.params=filename
comment9.target=src.src.StretchIcon(java.lang.String)
comment9.text=\r\n\ Creates\ a\ <CODE>src.src.StretchIcon</CODE>\ from\ the\ specified\ file.\r\n\r\n\ @param\ filename\ a\ String\ specifying\ a\ filename\ or\ path\r\n\r\n\ @see\ ImageIcon\#ImageIcon(java.lang.String)\r\n
numComments=20
